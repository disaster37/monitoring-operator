name: "build"

on:
  push:
    branches:
      - main
      - v1alpha1
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - v1alpha1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18" # The Go version to download (if necessary) and use.
      - name: Setup operator-sdk
        uses: jpkrohling/setup-operator-sdk@v1.1.0
        with:
          operator-sdk-version: v1.15.0
      - name: Run build
        run: make build
      - name: Run unit tests
        run: make test
      - uses: codecov/codecov-action@v2
        with:
          files: cover.out
          flags: unittests
          fail_ci_if_error: true

  acctest-k8s:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Setup operator-sdk
        uses: jpkrohling/setup-operator-sdk@v1.1.0
        with:
          operator-sdk-version: v1.22.0
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: "v1.25.2"
          kubernetes version: "v1.23.8"
          driver: docker
          start args: --addons ingress
      - name: Setup Centreon
        run: |
          #!/bin/bash
          set -e
          docker run --name centreon -d --privileged -t -p 80:80 disaster/centreon:21.10-configured
          until $(curl --output /dev/null --silent --head --fail http://localhost/centreon/index.php); do sleep 5; done
      - name: Run acceptance tests
        run: |
          #!/bin/bash
          set -e
          minikube status
          make install
          make run &
          sleep 60
          make test-acc

  acctest-openshift:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Setup operator-sdk
        uses: jpkrohling/setup-operator-sdk@v1.1.0
        with:
          operator-sdk-version: v1.22.0
      - name: Setup Microshift
        uses: container-tools/microshift-action@v0.2.1
        with:
          version: "4.8.0"
      - name: Setup Centreon
        run: |
          #!/bin/bash
          set -e
          sudo ufw disable
          sudo service docker restart
          docker run --name centreon -d --privileged -t -p 80:80 disaster/centreon:21.10-configured
          until $(curl --output /dev/null --silent --head --fail http://localhost/centreon/index.php); do sleep 5; done
      - name: Run acceptance tests
        run: |
          #!/bin/bash
          set -e
          kubectl config use-context microshift
          make install
          make run &
          sleep 60
          make test-acc
  
  bundle-test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Setup operator-sdk
        uses: jpkrohling/setup-operator-sdk@v1.1.0
        with:
          operator-sdk-version: v1.22.0
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: "v1.25.2"
          kubernetes version: "v1.23.8"
          driver: docker
          start args: --addons ingress
      - name: Run bundle tests
        run: |
          #!/bin/bash
          set -e
          make bundle
          operator-sdk scorecard bundle

  release:
    needs: [acctest-openshift, acctest-k8s, bundle-test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_docker_image:
    needs: [acctest-openshift, acctest-k8s]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Setup operator-sdk
        uses: jpkrohling/setup-operator-sdk@v1.1.0
        with:
          operator-sdk-version: v1.15.0
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: "v0.5.1"
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            webcenter/monitoring-operator
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
      - name: Commit hash
        id: git
        run: |
          echo ::set-output name=commit_hash::${GITHUB_SHA::8}
      - name: Build and push image
        run: |
          make docker-buildx
          make bundle-buildx
          make catalog-build
          make catalog-push