name: 'build'

on:
  push:
    branches:
      - main
      - v1alpha1
    tags:
      - '*'
  pull_request:
      branches:
        - main
        - v1alpha1

jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16' # The Go version to download (if necessary) and use.
    # Setup operator-sdk
    - name: Setup operator-sdk
      uses: jpkrohling/setup-operator-sdk@v1.1.0
      with:
        operator-sdk-version: v1.15.0
    # Run build of the application
    - name: Run build
      run: make build
    - name: Run unit tests
      run: make test
    - uses: codecov/codecov-action@v2
      with:
        files: cover.out
        flags: unittests
        fail_ci_if_error: true
    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2.4.2
      with:
        minikube version: 'v1.23.2'
        kubernetes version: 'v1.21.5'
        driver: docker
        start args: --addons ingress
    - name: Setup Centreon
      run: |
        #!/bin/bash
        set -e

        docker run --name centreon -d --privileged -t -p 80:80 disaster/centreon:21.10-configured
        until $(curl --output /dev/null --silent --head --fail http://localhost/centreon/index.php); do sleep 5; done
    - name: Run acceptance tests
      run: |
        #!/bin/bash
        set -e
        minikube status
        make install
        make run &
        sleep 60
        make test-acc

  helm-lint-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.2
      
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      - name: Lint chart
        run: |
          cd deploy/helm/monitoring-operator
          helm lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0

      - name: Install chart
        run: |
          cd deploy/helm/monitoring-operator
          helm install monitoring-operator . -n monitoring-operator --create-namespace --wait --set monitoring.url=http://localhost/centreon/api/index.php --set monitoring.secret.create=true --set monitoring.username=admin --set monitoring.password=admin

  release:
    needs: [build] # Only run this workflow when "build" workflow succeeds
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  release_docker_image:
    needs: [build] # Only run this workflow when "build" workflow succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses:  docker/setup-buildx-action@v1
        with:
          version: "v0.5.1"
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            webcenter/monitoring-operator
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: "version:${{ steps.tagName.outputs.tag }},commit: ${GITHUB_SHA::8}"
  
  publish:
    needs: [release_docker_image, helm-lint-test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
      - uses: datamonsters/replace-action@v2
        with:
          files: 'deploy/helm/monitoring-operator/Chart.yaml'
          replacements: "version=${{ steps.tagName.outputs.tag }},appVersion=${{ steps.tagName.outputs.tag }}"
      - uses: goodsmileduck/helm-push-action@v3.3.1
        env:
          SOURCE_DIR: '.'
          CHART_FOLDER: 'deploy/helm/monitoring-operator'
          FORCE: 'True'
          CHARTMUSEUM_URL: 'https://charts.webcenter.fr'
          CHARTMUSEUM_USER: '${{ secrets.CHARTMUSEUM_USER }}'
          CHARTMUSEUM_PASSWORD: ${{ secrets.CHARTMUSEUM_PASSWORD }}