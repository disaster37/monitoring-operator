
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: platforms.monitor.k8s.webcenter.fr
spec:
  group: monitor.k8s.webcenter.fr
  names:
    kind: Platform
    listKind: PlatformList
    plural: platforms
    singular: platform
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Platform is the Schema for the platforms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PlatformSpec defines the desired state of Platform
            properties:
              centreonSettings:
                description: CentreonSettings is the setting for Centreon plateform
                  type
                properties:
                  endpoint:
                    description: The endpoint default setting
                    properties:
                      activeService:
                        description: By default, activate service when created it
                          Default to true
                        type: boolean
                      arguments:
                        description: The default command arguements to set when create
                          service You can use special tag to generate value on the
                          flow
                        items:
                          type: string
                        type: array
                      categories:
                        description: Default categories
                        items:
                          type: string
                        type: array
                      defaultHost:
                        description: The default host to attach service
                        type: string
                      macros:
                        additionalProperties:
                          type: string
                        description: The default macro to set when create service
                          You can use special tag to generate value on the flow
                        type: object
                      nameTemplate:
                        description: The default template name when create service
                          from endpoint
                        type: string
                      serviceGroups:
                        description: Default service groups
                        items:
                          type: string
                        type: array
                      template:
                        description: The default service template to use when create
                          service from endpoint It normally optional, but Centreon
                          bug impose to set an existed template
                        type: string
                    required:
                    - template
                    type: object
                  secret:
                    description: Secret is the secret that store the username and
                      password to access on Centreon API It need to have `username`
                      and `password` key
                    type: string
                  selfSignedCertificat:
                    description: SelfSignedCertificat is true if you shouldn't check
                      Centreon API certificate
                    type: boolean
                  url:
                    description: URL is the full URL to access on Centreon API
                    type: string
                required:
                - secret
                - selfSignedCertificat
                - url
                type: object
              isDefault:
                description: IsDefault is set to tru to use this plateform when is
                  not specify on resource to create
                type: boolean
              name:
                description: Name is the unique name for platform
                type: string
              type:
                description: PlatformType is the platform type. It support only `centreon`
                  at this time
                type: string
            required:
            - isDefault
            - name
            - type
            type: object
          status:
            description: PlatformStatus defines the observed state of Platform
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
