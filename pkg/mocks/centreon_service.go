// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/disaster37/monitoring-operator/controllers (interfaces: CentreonService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	v1 "github.com/disaster37/monitoring-operator/api/v1"
	gomock "github.com/golang/mock/gomock"
	logrus "github.com/sirupsen/logrus"
)

// MockCentreonService is a mock of CentreonService interface.
type MockCentreonService struct {
	ctrl     *gomock.Controller
	recorder *MockCentreonServiceMockRecorder
}

// MockCentreonServiceMockRecorder is the mock recorder for MockCentreonService.
type MockCentreonServiceMockRecorder struct {
	mock *MockCentreonService
}

// NewMockCentreonService creates a new mock instance.
func NewMockCentreonService(ctrl *gomock.Controller) *MockCentreonService {
	mock := &MockCentreonService{ctrl: ctrl}
	mock.recorder = &MockCentreonServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCentreonService) EXPECT() *MockCentreonServiceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockCentreonService) Delete(arg0 *v1.CentreonService) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockCentreonServiceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCentreonService)(nil).Delete), arg0)
}

// Reconcile mocks base method.
func (m *MockCentreonService) Reconcile(arg0 *v1.CentreonService) (bool, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reconcile", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Reconcile indicates an expected call of Reconcile.
func (mr *MockCentreonServiceMockRecorder) Reconcile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reconcile", reflect.TypeOf((*MockCentreonService)(nil).Reconcile), arg0)
}

// SetLogger mocks base method.
func (m *MockCentreonService) SetLogger(arg0 *logrus.Entry) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLogger", arg0)
}

// SetLogger indicates an expected call of SetLogger.
func (mr *MockCentreonServiceMockRecorder) SetLogger(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLogger", reflect.TypeOf((*MockCentreonService)(nil).SetLogger), arg0)
}
